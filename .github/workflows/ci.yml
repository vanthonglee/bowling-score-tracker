name: CI

# Trigger on push or pull requests to main branch
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  # REGISTRY: docker.io  # Or ghcr.io for GitHub Container Registry
  NAMESPACE: ${{ secrets.DOCKER_USERNAME }}  # Your Docker Hub username or GitHub org

jobs:
  security-check:
    name: Security Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Still needed if you use Turbo filters later

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run security audit
        run: yarn audit --groups dependencies production
        continue-on-error: true # Allows reporting without failing; adjust as needed

  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: [security-check] # Runs after all 

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for Turborepo change detection

      # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn" # Cache Yarn dependencies

      # Install dependencies with Yarn
      - name: Install dependencies
        run: yarn install --frozen-lockfile # Ensures consistent installs

      # Cache Turborepo artifacts
      - name: Cache Turbo build
        uses: actions/cache@v4
        with:
          path: |
            .turbo
            **/node_modules/.cache/turbo
          key: turbo-${{ runner.os }}-${{ github.job }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ runner.os }}-${{ github.job }}-

      # # Lint all affected projects
      # - name: Lint
      #   run: yarn turbo run lint --concurrency=10

      # Build all affected projects
      - name: Build
        run: yarn turbo run build --concurrency=10

      # # Run tests for all affected projects
      # - name: Test
      #   run: yarn turbo run test --concurrency=10

  docker-build-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: [security-check, build-and-test, code-coverage]
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install docker-compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.7/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        env:
          TAG: ${{ github.sha }}
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1
        run: |
          COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1 docker-compose -f docker-compose.yml build
          docker push ${{ secrets.DOCKER_USERNAME }}/bowling-score-tracker-backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/bowling-score-tracker-frontend:latest