name: CI

# Trigger on push or pull requests to main branch
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  security-check:
      name: Security Check
      runs-on: ubuntu-latest

      steps:
        - name: Checkout code
          uses: actions/checkout@v4
          with:
            fetch-depth: 0  # Still needed if you use Turbo filters later

        - name: Setup Node.js
          uses: actions/setup-node@v4
          with:
            node-version: 20
            cache: 'yarn'

        - name: Install dependencies
          run: yarn install --frozen-lockfile

        - name: Run security audit
          run: yarn audit --groups dependencies production
          continue-on-error: true  # Allows reporting without failing; adjust as needed
          
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for Turborepo change detection

      # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'  # Cache Yarn dependencies

      # Install dependencies with Yarn
      - name: Install dependencies
        run: yarn install --frozen-lockfile  # Ensures consistent installs

      # Cache Turborepo artifacts
      - name: Cache Turbo build
        uses: actions/cache@v4
        with:
          path: |
            .turbo
            **/node_modules/.cache/turbo
          key: turbo-${{ runner.os }}-${{ github.job }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ runner.os }}-${{ github.job }}-

      # # Lint all affected projects
      # - name: Lint
      #   run: yarn turbo run lint --concurrency=10

      # Build all affected projects
      - name: Build
        run: yarn turbo run build --concurrency=10

      # # Run tests for all affected projects
      # - name: Test
      #   run: yarn turbo run test --concurrency=10

  docker-build-push:
      name: Build and Push Docker Images
      runs-on: ubuntu-latest
      needs: [security-check, build-and-test, code-coverage]  # Runs after all other jobs succeed
      if: github.event_name == 'push'  # Only run on push, not PRs

      steps:
        - name: Checkout code
          uses: actions/checkout@v4
          with:
            fetch-depth: 0

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Log in to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        - name: Build and push Docker images
          env:
            TAG: ${{ github.sha }}  # Use commit SHA as tag; or "latest" for main
          run: |
            docker-compose build
            docker-compose push